{"remainingRequest":"C:\\Users\\Teddy\\Desktop\\Projects\\Temporaire\\counter\\node_modules\\ts-loader\\index.js??ref--16-1!C:\\Users\\Teddy\\Desktop\\Projects\\Temporaire\\counter\\packages\\web\\src\\Counter.tsx","dependencies":[{"path":"C:\\Users\\Teddy\\Desktop\\Projects\\Temporaire\\counter\\packages\\web\\src\\Counter.tsx","mtime":1657365772639},{"path":"C:\\Users\\Teddy\\Desktop\\Projects\\Temporaire\\counter\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657177715746},{"path":"C:\\Users\\Teddy\\Desktop\\Projects\\Temporaire\\counter\\node_modules\\ts-loader\\index.js","mtime":1657177717381}],"contextDependencies":[],"result":["var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { gql, useLazyQuery, useMutation } from '@apollo/client';\r\nimport { decrement, increment, load } from './store/counter.slice';\r\nexport var GET_COUNTER = gql(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n  query counter {\\n    counter\\n  }\\n\"], [\"\\n  query counter {\\n    counter\\n  }\\n\"])));\r\nexport var SET_COUNTER = gql(templateObject_2 || (templateObject_2 = __makeTemplateObject([\"\\n  mutation setCounter($counter: Int) {\\n    setCounter(counter: $counter)\\n  }\\n\"], [\"\\n  mutation setCounter($counter: Int) {\\n    setCounter(counter: $counter)\\n  }\\n\"])));\r\nvar Counter = function () {\r\n    var counter = useSelector(function (state) { return state.counter.value; });\r\n    var dispatch = useDispatch();\r\n    var _a = useLazyQuery(GET_COUNTER), getCount = _a[0], query = _a[1];\r\n    var _b = useMutation(SET_COUNTER, { variables: { counter: counter } }), mutate = _b[0], mutation = _b[1];\r\n    useEffect(function () {\r\n        if (query.data)\r\n            dispatch(load(query.data.counter));\r\n    }, [query.data]);\r\n    return (React.createElement(\"div\", null,\r\n        React.createElement(\"h1\", null,\r\n            \"Counter: \",\r\n            counter),\r\n        React.createElement(\"button\", { onClick: function () { return dispatch(decrement()); } }, \"-\"),\r\n        React.createElement(\"button\", { onClick: function () { return dispatch(increment()); } }, \"+\"),\r\n        React.createElement(\"button\", { disabled: mutation.loading, onClick: function () { return mutate(); } }, \"save\"),\r\n        React.createElement(\"button\", { disabled: mutation.loading, onClick: function () { return getCount(); } }, \"load\")));\r\n};\r\nexport default Counter;\r\nvar templateObject_1, templateObject_2;\r\n",{"version":3,"file":"C:\\Users\\Teddy\\Desktop\\Projects\\Temporaire\\counter\\packages\\web\\src\\Counter.tsx","sourceRoot":"","sources":["C:\\Users\\Teddy\\Desktop\\Projects\\Temporaire\\counter\\packages\\web\\src\\Counter.tsx"],"names":[],"mappings":";;;;AAAA,OAAO,KAAK,EAAE,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AACzC,OAAO,EAAE,WAAW,EAAE,WAAW,EAAE,MAAM,aAAa,CAAC;AACvD,OAAO,EAAE,GAAG,EAAE,YAAY,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;AAEhE,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,IAAI,EAAE,MAAM,uBAAuB,CAAC;AAGnE,MAAM,CAAC,IAAM,WAAW,GAAG,GAAG,4GAAA,yCAI7B,IAAA,CAAC;AAEF,MAAM,CAAC,IAAM,WAAW,GAAG,GAAG,uJAAA,oFAI7B,IAAA,CAAC;AAEF,IAAM,OAAO,GAAG;IACd,IAAM,OAAO,GAAG,WAAW,CAAC,UAAC,KAAgB,IAAK,OAAA,KAAK,CAAC,OAAO,CAAC,KAAK,EAAnB,CAAmB,CAAC,CAAC;IACvE,IAAM,QAAQ,GAAG,WAAW,EAAE,CAAC;IAEzB,IAAA,KAAoB,YAAY,CAAC,WAAW,CAAC,EAA5C,QAAQ,QAAA,EAAE,KAAK,QAA6B,CAAC;IAC9C,IAAA,KAAqB,WAAW,CAAC,WAAW,EAAE,EAAE,SAAS,EAAE,EAAE,OAAO,SAAA,EAAE,EAAE,CAAC,EAAxE,MAAM,QAAA,EAAE,QAAQ,QAAwD,CAAC;IAEhF,SAAS,CAAC;QACR,IAAI,KAAK,CAAC,IAAI;YAAE,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;IACrD,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;IAEjB,OAAO,CACL;QACE;;YAAc,OAAO,CAAM;QAC3B,gCAAQ,OAAO,EAAE,cAAM,OAAA,QAAQ,CAAC,SAAS,EAAE,CAAC,EAArB,CAAqB,QAAY;QACxD,gCAAQ,OAAO,EAAE,cAAM,OAAA,QAAQ,CAAC,SAAS,EAAE,CAAC,EAArB,CAAqB,QAAY;QACxD,gCAAQ,QAAQ,EAAE,QAAQ,CAAC,OAAO,EAAE,OAAO,EAAE,cAAM,OAAA,MAAM,EAAE,EAAR,CAAQ,WAElD;QACT,gCAAQ,QAAQ,EAAE,QAAQ,CAAC,OAAO,EAAE,OAAO,EAAE,cAAM,OAAA,QAAQ,EAAE,EAAV,CAAU,WAEpD,CACL,CACP,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,OAAO,CAAC","sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { gql, useLazyQuery, useMutation } from '@apollo/client';\n\nimport { decrement, increment, load } from './store/counter.slice';\nimport { RootState } from './store/store';\n\nexport const GET_COUNTER = gql`\n  query counter {\n    counter\n  }\n`;\n\nexport const SET_COUNTER = gql`\n  mutation setCounter($counter: Int) {\n    setCounter(counter: $counter)\n  }\n`;\n\nconst Counter = () => {\n  const counter = useSelector((state: RootState) => state.counter.value);\n  const dispatch = useDispatch();\n\n  const [getCount, query] = useLazyQuery(GET_COUNTER);\n  const [mutate, mutation] = useMutation(SET_COUNTER, { variables: { counter } });\n\n  useEffect(() => {\n    if (query.data) dispatch(load(query.data.counter));\n  }, [query.data]);\n\n  return (\n    <div>\n      <h1>Counter: {counter}</h1>\n      <button onClick={() => dispatch(decrement())}>-</button>\n      <button onClick={() => dispatch(increment())}>+</button>\n      <button disabled={mutation.loading} onClick={() => mutate()}>\n        save\n      </button>\n      <button disabled={mutation.loading} onClick={() => getCount()}>\n        load\n      </button>\n    </div>\n  );\n};\n\nexport default Counter;\n"]}]}