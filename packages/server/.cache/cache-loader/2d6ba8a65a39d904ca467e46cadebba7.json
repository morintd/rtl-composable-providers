{"remainingRequest":"C:\\Users\\Teddy\\Desktop\\Projects\\Temporaire\\counter\\node_modules\\ts-loader\\index.js??ref--16-1!C:\\Users\\Teddy\\Desktop\\Projects\\Temporaire\\counter\\packages\\server\\src\\index.ts","dependencies":[{"path":"C:\\Users\\Teddy\\Desktop\\Projects\\Temporaire\\counter\\packages\\server\\src\\index.ts","mtime":1657177651058},{"path":"C:\\Users\\Teddy\\Desktop\\Projects\\Temporaire\\counter\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657177715746},{"path":"C:\\Users\\Teddy\\Desktop\\Projects\\Temporaire\\counter\\node_modules\\ts-loader\\index.js","mtime":1657177717381}],"contextDependencies":[],"result":["import startServer from './server';\r\ntry {\r\n    var PORT_1 = 8080;\r\n    var server_1;\r\n    if (module.hot) {\r\n        module.hot.accept();\r\n        module.hot.dispose(function (data) {\r\n            if (server_1) {\r\n                server_1.close();\r\n            }\r\n            data.hotReloaded = true;\r\n        });\r\n        module.hot.addStatusHandler(function (status) {\r\n            if (status === 'fail') {\r\n                process.exit(250);\r\n            }\r\n        });\r\n    }\r\n    var firstStartInDevMode_1 = module.hot && process.env.LAST_EXIT_CODE === '0' && (!module.hot.data || !module.hot.data.hotReloaded);\r\n    startServer(PORT_1).then(function (serverInstance) {\r\n        if (!module.hot || firstStartInDevMode_1) {\r\n            console.log(\"GraphQL Server is now running on http://localhost:\" + PORT_1);\r\n        }\r\n        server_1 = serverInstance;\r\n    });\r\n}\r\ncatch (e) {\r\n    console.error(e);\r\n    process.exit(1);\r\n}\r\n",{"version":3,"file":"C:\\Users\\Teddy\\Desktop\\Projects\\Temporaire\\counter\\packages\\server\\src\\index.ts","sourceRoot":"","sources":["C:\\Users\\Teddy\\Desktop\\Projects\\Temporaire\\counter\\packages\\server\\src\\index.ts"],"names":[],"mappings":"AAEA,OAAO,WAAW,MAAM,UAAU,CAAC;AAEnC,IAAI;IACF,IAAM,MAAI,GAAG,IAAI,CAAC;IAElB,IAAI,QAAc,CAAC;IAEnB,IAAI,MAAM,CAAC,GAAG,EAAE;QACd,MAAM,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC;QACpB,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,UAAA,IAAI;YACrB,IAAI,QAAM,EAAE;gBACV,QAAM,CAAC,KAAK,EAAE,CAAC;aAChB;YACD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAC1B,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,GAAG,CAAC,gBAAgB,CAAC,UAAA,MAAM;YAChC,IAAI,MAAM,KAAK,MAAM,EAAE;gBACrB,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aACnB;QACH,CAAC,CAAC,CAAC;KACJ;IAED,IAAM,qBAAmB,GACvB,MAAM,CAAC,GAAG,IAAI,OAAO,CAAC,GAAG,CAAC,cAAc,KAAK,GAAG,IAAI,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAEzG,WAAW,CAAC,MAAI,CAAC,CAAC,IAAI,CAAC,UAAA,cAAc;QACnC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,qBAAmB,EAAE;YACtC,OAAO,CAAC,GAAG,CAAC,uDAAqD,MAAM,CAAC,CAAC;SAC1E;QAED,QAAM,GAAG,cAAc,CAAC;IAC1B,CAAC,CAAC,CAAC;CACJ;AAAC,OAAO,CAAC,EAAE;IACV,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IACjB,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;CACjB","sourcesContent":["import { Server } from 'http';\n\nimport startServer from './server';\n\ntry {\n  const PORT = 8080;\n\n  let server: Server;\n\n  if (module.hot) {\n    module.hot.accept();\n    module.hot.dispose(data => {\n      if (server) {\n        server.close();\n      }\n      data.hotReloaded = true;\n    });\n    module.hot.addStatusHandler(status => {\n      if (status === 'fail') {\n        process.exit(250);\n      }\n    });\n  }\n\n  const firstStartInDevMode =\n    module.hot && process.env.LAST_EXIT_CODE === '0' && (!module.hot.data || !module.hot.data.hotReloaded);\n\n  startServer(PORT).then(serverInstance => {\n    if (!module.hot || firstStartInDevMode) {\n      console.log(`GraphQL Server is now running on http://localhost:${PORT}`);\n    }\n\n    server = serverInstance;\n  });\n} catch (e) {\n  console.error(e);\n  process.exit(1);\n}\n"]}]}